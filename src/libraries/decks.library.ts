import { CardsLibrary } from './cards.library';
import { IDeck } from '../@shared/rest-shared/entities';

export class DecksLibrary {

  static readonly decks: IDeck[] = [
    {
      id: `hunter`,
      type: 'destiny',
      name: {
        en: ``,
        fr: `Chasseur`,
      },
      description: {
        en: ``,
        fr: ``,
      },
      cards: [
        CardsLibrary.find('putrefaction'),
        CardsLibrary.find('putrefaction'),
        CardsLibrary.find('ruin'),
        CardsLibrary.find('ruin'),
        CardsLibrary.find('heal'),
        CardsLibrary.find('heal'),
        CardsLibrary.find('reconstruct'),
        CardsLibrary.find('reconstruct'),
        CardsLibrary.find('replacement'),
        CardsLibrary.find('replacement'),
        CardsLibrary.find('thunder'),
        CardsLibrary.find('thunder'),
        CardsLibrary.find('smoky-totem'),
        CardsLibrary.find('smoky-totem'),
        CardsLibrary.find('smoky-totem'),
        CardsLibrary.find('smoky-totem'),
        CardsLibrary.find('the-tower'),
        CardsLibrary.find('the-tower'),
        CardsLibrary.find('the-tower'),
        CardsLibrary.find('the-tower'),
        CardsLibrary.find('barbers'),
        CardsLibrary.find('barbers'),
        CardsLibrary.find('gargoyle'),
        CardsLibrary.find('gargoyle'),
        CardsLibrary.find('banshee'),
        CardsLibrary.find('banshee'),
        CardsLibrary.find('banshee'),
        CardsLibrary.find('banshee'),
        CardsLibrary.find('the-fox'),
        CardsLibrary.find('the-fox'),
        CardsLibrary.find('the-fox'),
        CardsLibrary.find('the-fox'),
        CardsLibrary.find('veneniagora'),
        CardsLibrary.find('veneniagora'),
        CardsLibrary.find('soul-of-a-sacrified-hunter'),
        CardsLibrary.find('soul-of-a-sacrified-hunter'),
        CardsLibrary.find('hunter'),
      ],
    },
    {
      id: `conjurer`,
      type: 'destiny',
      name: {
        en: ``,
        fr: `Illusionniste`,
      },
      description: {
        en: ``,
        fr: ``,
      },
      cards: [
        CardsLibrary.find('putrefaction'),
        CardsLibrary.find('putrefaction'),
        CardsLibrary.find('ruin'),
        CardsLibrary.find('reconstruct'),
        CardsLibrary.find('reconstruct'),
        CardsLibrary.find('reconstruct'),
        CardsLibrary.find('banshee'),
        CardsLibrary.find('banshee'),
        CardsLibrary.find('the-fox'),
        CardsLibrary.find('the-fox'),
        CardsLibrary.find('veneniagora'),
        CardsLibrary.find('veneniagora'),
        CardsLibrary.find('smoky-totem'),
        CardsLibrary.find('smoky-totem'),
        CardsLibrary.find('smoky-totem'),
        CardsLibrary.find('smoky-totem'),
        CardsLibrary.find('the-tower'),
        CardsLibrary.find('the-tower'),
        CardsLibrary.find('the-tower'),
        CardsLibrary.find('the-tower'),
        CardsLibrary.find('barbers'),
        CardsLibrary.find('barbers'),
        CardsLibrary.find('barbers'),
        CardsLibrary.find('barbers'),
        CardsLibrary.find('the-wall'),
        CardsLibrary.find('the-wall'),
        CardsLibrary.find('shadows-banner'),
        CardsLibrary.find('shadows-banner'),
        CardsLibrary.find('monstrous-portal'),
        CardsLibrary.find('monstrous-portal'),
        CardsLibrary.find('insanes-run'),
        CardsLibrary.find('insanes-run'),
        CardsLibrary.find('insanes-run'),
        CardsLibrary.find('insanes-run'),
        CardsLibrary.find('growing-oak'),
        CardsLibrary.find('growing-oak'),
        CardsLibrary.find('conjurer'),
      ],
    },
    {
      id: `summoner`,
      type: 'destiny',
      name: {
        en: ``,
        fr: `Invocateur`,
      },
      description: {
        en: ``,
        fr: ``,
      },
      cards: [
        CardsLibrary.find('ruin'),
        CardsLibrary.find('putrefaction'),
        CardsLibrary.find('putrefaction'),
        CardsLibrary.find('heal'),
        CardsLibrary.find('heal'),
        CardsLibrary.find('heal'),
        CardsLibrary.find('smoky-totem'),
        CardsLibrary.find('smoky-totem'),
        CardsLibrary.find('the-tower'),
        CardsLibrary.find('the-tower'),
        CardsLibrary.find('barbers'),
        CardsLibrary.find('barbers'),
        CardsLibrary.find('banshee'),
        CardsLibrary.find('banshee'),
        CardsLibrary.find('banshee'),
        CardsLibrary.find('banshee'),
        CardsLibrary.find('the-fox'),
        CardsLibrary.find('the-fox'),
        CardsLibrary.find('the-fox'),
        CardsLibrary.find('the-fox'),
        CardsLibrary.find('veneniagora'),
        CardsLibrary.find('veneniagora'),
        CardsLibrary.find('veneniagora'),
        CardsLibrary.find('veneniagora'),
        CardsLibrary.find('paladin-of-the-ninth-desert'),
        CardsLibrary.find('paladin-of-the-ninth-desert'),
        CardsLibrary.find('deadly-viper'),
        CardsLibrary.find('deadly-viper'),
        CardsLibrary.find('volkha'),
        CardsLibrary.find('insanes-echo'),
        CardsLibrary.find('jester'),
        CardsLibrary.find('jester'),
        CardsLibrary.find('jester'),
        CardsLibrary.find('jester'),
        CardsLibrary.find('jester'),
        CardsLibrary.find('jester'),
        CardsLibrary.find('summoner'),
      ],
    },
    {
      id: `sorcerer`,
      type: 'destiny',
      name: {
        en: ``,
        fr: `Prestidigitateur`,
      },
      description: {
        en: ``,
        fr: ``,
      },
      cards: [
        CardsLibrary.find('banshee'),
        CardsLibrary.find('banshee'),
        CardsLibrary.find('the-fox'),
        CardsLibrary.find('the-fox'),
        CardsLibrary.find('veneniagora'),
        CardsLibrary.find('veneniagora'),
        CardsLibrary.find('smoky-totem'),
        CardsLibrary.find('smoky-totem'),
        CardsLibrary.find('the-tower'),
        CardsLibrary.find('the-tower'),
        CardsLibrary.find('barbers'),
        CardsLibrary.find('barbers'),
        CardsLibrary.find('putrefaction'),
        CardsLibrary.find('putrefaction'),
        CardsLibrary.find('putrefaction'),
        CardsLibrary.find('putrefaction'),
        CardsLibrary.find('putrefaction'),
        CardsLibrary.find('ruin'),
        CardsLibrary.find('ruin'),
        CardsLibrary.find('ruin'),
        CardsLibrary.find('ruin'),
        CardsLibrary.find('ruin'),
        CardsLibrary.find('heal'),
        CardsLibrary.find('reconstruct'),
        CardsLibrary.find('achieve'),
        CardsLibrary.find('achieve'),
        CardsLibrary.find('achieve'),
        CardsLibrary.find('ether'),
        CardsLibrary.find('ether'),
        CardsLibrary.find('ether'),
        CardsLibrary.find('ether'),
        CardsLibrary.find('alter-the-fate'),
        CardsLibrary.find('alter-the-fate'),
        CardsLibrary.find('alter-the-fate'),
        CardsLibrary.find('fire'),
        CardsLibrary.find('fire'),
        CardsLibrary.find('sorcerer'),
      ],
    },
    {
      id: `healder`,
      type: 'origin',
      name: {
        en: ``,
        fr: `GuÃ©risseur`,
      },
      description: {
        en: ``,
        fr: ``,
      },
      cards: [
        // CardsLibrary.find('cure'),
        // CardsLibrary.find('cure'),
        // CardsLibrary.find('guardian'),
        // CardsLibrary.find('guardian'),
        // CardsLibrary.find('caduceus'),
        // CardsLibrary.find('caduceus'),
      ],
    },
  ];

  static find(id: string): IDeck|undefined {
    return this.decks.find(e => e.id === id);
  }

}
